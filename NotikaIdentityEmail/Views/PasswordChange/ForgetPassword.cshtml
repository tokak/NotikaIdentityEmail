@model ForgetPasswordViewModels
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Şifremi Unuttum</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />

    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .forgot-password-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .forgot-password-card,
        .reset-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: none;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            max-width: 450px;
            width: 100%;
            padding: 2rem;
        }

        .forgot-password-header,
        .card-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .forgot-password-icon,
        .reset-icon {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.5rem;
            color: white;
            font-size: 2rem;
        }

        .forgot-password-title,
        .card-title {
            color: #2c3e50;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .forgot-password-subtitle,
        .card-subtitle {
            color: #6c757d;
            font-size: 0.95rem;
            line-height: 1.5;
        }

        .form-floating {
            margin-bottom: 1.5rem;
        }

        .form-control {
            border: 2px solid #e9ecef;
            border-radius: 12px;
            padding: 1rem 0.75rem;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

            .form-control:focus {
                border-color: #667eea;
                box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
            }

        .btn-reset {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 12px;
            padding: 0.875rem 2rem;
            font-weight: 600;
            font-size: 1rem;
            width: 100%;
            transition: all 0.3s ease;
            text-transform: none;
        }

            .btn-reset:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
            }

        .back-to-login {
            text-align: center;
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 1px solid #e9ecef;
        }

            .back-to-login a {
                color: #667eea;
                text-decoration: none;
                font-weight: 500;
                transition: color 0.3s ease;
            }

                .back-to-login a:hover {
                    color: #764ba2;
                }

        .alert {
            border-radius: 12px;
            border: none;
            margin-bottom: 1.5rem;
        }

        @@media (max-width: 576px) {
            .forgot-password-card, .reset-card

        {
            margin: 1rem;
            padding: 1.5rem;
        }

        .forgot-password-icon,
        .reset-icon {
            width: 60px;
            height: 60px;
            font-size: 1.5rem;
        }

        }
    </style>
</head>
<body>
    <div class="forgot-password-container">
        <div class="forgot-password-card reset-card shadow-sm">
            <div class="card-header">
                <div class="reset-icon">
                    <i class="fas fa-lock"></i>
                </div>
                <h2 class="card-title h4">Parola Sıfırla</h2>
                <p class="card-subtitle">Yeni parolanızı belirleyin</p>
            </div>

            <div class="card-body">

                @* Genel model hatalarını sayfanın üstünde göster *@
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        <ul class="mb-0">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                }

                <form id="resetPasswordForm" method="post" novalidate>
                    <div class="form-floating mb-3">
                        <input type="password"
                               class="form-control"
                               id="newPassword"
                               name="Password"
                               placeholder="Yeni Parola"
                               required
                               minlength="6" />
                        <label for="newPassword">
                            <i class="fas fa-key me-2"></i>Yeni Parola
                        </label>
                        <div id="passwordStrength" class="form-text mt-1"></div>
                    </div>

                    <div class="form-floating mb-3">
                        <input type="password"
                               class="form-control"
                               id="confirmPassword"
                               name="ConfirmPassword"
                               placeholder="Parolayı Onayla"
                               required
                               minlength="6" />
                        <label for="confirmPassword">
                            <i class="fas fa-check-circle me-2"></i>Parolayı Onayla
                        </label>
                        <div id="passwordMatch" class="form-text mt-1"></div>
                    </div>

                    <div id="formError" class="text-danger mb-3"></div>

                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary btn-reset">
                            <i class="fas fa-sync-alt me-2"></i>Parolayı Sıfırla
                        </button>
                    </div>
                </form>

                <div class="back-to-login">
                    <a href="/Account/Login" class="text-decoration-none">
                        <i class="fas fa-arrow-left me-1"></i> Giriş sayfasına dön
                    </a>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const newPasswordInput = document.getElementById('newPassword');
            const confirmPasswordInput = document.getElementById('confirmPassword');
            const passwordStrengthDiv = document.getElementById('passwordStrength');
            const passwordMatchDiv = document.getElementById('passwordMatch');
            const formErrorDiv = document.getElementById('formError');
            const form = document.getElementById('resetPasswordForm');

            function checkPasswordStrength(password) {
                let score = 0;
                if (password.length >= 8) score++;
                if (/[a-z]/.test(password)) score++;
                if (/[A-Z]/.test(password)) score++;
                if (/[0-9]/.test(password)) score++;
                if (/[^A-Za-z0-9]/.test(password)) score++;

                if (score < 3) return { text: 'Zayıf', class: 'text-danger' };
                if (score < 4) return { text: 'Orta', class: 'text-warning' };
                return { text: 'Güçlü', class: 'text-success' };
            }

            function updatePasswordStrength() {
                const password = newPasswordInput.value;
                if (password.length === 0) {
                    passwordStrengthDiv.textContent = '';
                    return;
                }
                const strength = checkPasswordStrength(password);
                passwordStrengthDiv.textContent = `Parola Gücü: ${strength.text}`;
                passwordStrengthDiv.className = `form-text mt-1 ${strength.class}`;
            }

            function updatePasswordMatch() {
                const password = newPasswordInput.value;
                const confirmPassword = confirmPasswordInput.value;
                if (confirmPassword.length === 0) {
                    passwordMatchDiv.textContent = '';
                    return;
                }
                if (password === confirmPassword) {
                    passwordMatchDiv.innerHTML = `<i class="fas fa-check me-1 text-success"></i>Parolalar eşleşiyor`;
                    passwordMatchDiv.className = 'form-text mt-1 text-success';
                } else {
                    passwordMatchDiv.innerHTML = `<i class="fas fa-times me-1 text-danger"></i>Parolalar eşleşmiyor`;
                    passwordMatchDiv.className = 'form-text mt-1 text-danger';
                }
            }

            newPasswordInput.addEventListener('input', () => {
                updatePasswordStrength();
                updatePasswordMatch();
                formErrorDiv.textContent = '';
            });

            confirmPasswordInput.addEventListener('input', () => {
                updatePasswordMatch();
                formErrorDiv.textContent = '';
            });

            form.addEventListener('submit', function (e) {
                formErrorDiv.textContent = '';

                const password = newPasswordInput.value;
                const confirmPassword = confirmPasswordInput.value;

                if (password.length < 6) {
                    e.preventDefault();
                    formErrorDiv.textContent = 'Parola en az 6 karakter olmalıdır.';
                    return false;
                }

                if (password !== confirmPassword) {
                    e.preventDefault();
                    formErrorDiv.textContent = 'Parolalar eşleşmiyor. Lütfen kontrol edin.';
                    return false;
                }
            });
        });
    </script>
</body>
</html>
